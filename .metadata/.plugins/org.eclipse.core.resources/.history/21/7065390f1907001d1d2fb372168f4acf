package com.skillstorm.DAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.skillstorm.beans.Expense;
import com.skillstorm.beans.ExpenseJoinTable;
import com.skillstorm.beans.ReimbursementStatus;

public class ExpenseDAO {
	
	private Connection connection;
	
	public ExpenseDAO() throws SQLException{
		String url = "jdbc:mysql://localhost:3306/reimbursementsystem";
		String username = "root";
		String password = "root";
		this.connection = DriverManager.getConnection(url, username, password);
	}
	
	public Expense create(Expense expense) throws SQLException{
		ReimbursementStatus status = new ReimbursementStatus();
		String sql = "insert into expenses(employee_name, reason, notes, reimbursement_id) values (?, ?, ?, 1)";
		PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		statement.setString(1, expense.getEmployeeName());
		statement.setString(2, expense.getExpenseReason());
		statement.setString(3, expense.getExpenseNotes());
		statement.executeUpdate();
		ResultSet rs = statement.getGeneratedKeys();
		
		if(rs.next()) {
			expense.setExpenseId(rs.getInt(1));
			return expense;
		} else
			return null;
	}
	// expenses reimbursement_statuses 
	/*
	 * 
	 * 
	 * String sql = "select expenses.employee_name, expenses.reason, expenses.notes, reimbursement_statuses.reimbursement_status "
				   + "from expenses "
				   + "inner join reimbursement_statuses on expenses.reimbursement_id = reimbursement_statuses.reimbursement_id "
				   + "where expenses.expense_id = ?";
	 * 
	 * */
	public ArrayList<ExpenseJoinTable> findById(int id) throws SQLException{
		
		ArrayList<ExpenseJoinTable> list = new ArrayList<>();		
		String sql = "select expenses.employee_name, expenses.reason, expenses.notes, reimbursement_statuses.reimbursement_status "
				   + "from expenses "
				   + "inner join reimbursement_statuses on expenses.reimbursement_id = reimbursement_statuses.reimbursement_id "
				   + "where expenses.expense_id = ?";
		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setInt(1, id);
		ResultSet rs = statement.executeQuery();
		
		while (rs.next()) {
			ExpenseJoinTable expense = new ExpenseJoinTable();
			expense.setEmployeeName(rs.getString("employee_name"));
			expense.setExpenseReason(rs.getString("reason"));
			expense.setExpenseNotes(rs.getString("notes"));
			expense.setStatus(rs.getString("reimbursement_status"));
			list.add(expense);
		}
		
		return list;
		
	}
	
	public ArrayList<ExpenseJoinTable> findByName(String name) throws SQLException{
		ArrayList<ExpenseJoinTable> list = new ArrayList<>();
		String sql = "select expenses.employee_name, expenses.reason, expenses.notes, reimbursement_statuses.reimbursement_status "
				   + "from expenses "
				   + "inner join reimbursement_statuses on expenses.reimbursement_id = reimbursement_statuses.reimbursement_id "
				   + "where expenses.employee_name = ?";
		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setString(1, name);
		ResultSet rs = statement.executeQuery();
		
		while (rs.next()) {
			ExpenseJoinTable expense = new ExpenseJoinTable();
			expense.setEmployeeName(rs.getString("employee_name"));
			expense.setExpenseReason(rs.getString("reason"));
			expense.setExpenseNotes(rs.getString("notes"));
			expense.setStatus(rs.getString("reimbursement_status"));
			list.add(expense);
		}
		
		return list;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
